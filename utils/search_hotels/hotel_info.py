from telebot.types import Message, CallbackQuery

from loader import logger, bot
from utils.decorators import exception_control
from utils.misc import usd_rate


@exception_control.func_exception_control
def func_hotel_info(hotel: dict, user_data: CallbackQuery | Message) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—Ç–µ–ª–µ(hotel) –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–∞–Ω–Ω—ã–º"""

    line: str = f'<b>\n{"*" * 45}\n\n‚ÑπÔ∏è    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–µ–ª–µ    ‚ÑπÔ∏è\n–†–µ–π—Ç–∏–Ω–≥ –æ—Ç–µ–ª—è: </b>'
    url_hotel: str = f'https://www.hotels.com/ho{hotel["id"]}\n'

    try:
        hotel_stars: str = '\u2B50' * int(hotel["starRating"] // 1)
        if hotel_stars:
            line += f'{hotel_stars}\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–µ–ª—å &#128073 <a href="{url_hotel}"><b>{hotel["name"]}</b></a>\n'
        else:
            line += f'—Ä–µ–π—Ç–∏–Ω–≥ –Ω–µ —É–∫–∞–∑–∞–Ω \n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–µ–ª—å &#128073 <a href="{url_hotel}"><b>{hotel["name"]}</b></a>\n'
    except KeyError:
        line += f'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–µ–ª—å <a href="{url_hotel}"><b>"{hotel["name"]}"</b></a>\n'

    try:
        line += f'<u>–°—Ç—Ä–∞–Ω–∞</u>: {hotel["address"]["countryName"]}\n'
        line += f'<u>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</u>: {hotel["address"]["locality"]}\n'
        line += f'<u>–£–ª–∏—Ü–∞</u>: {hotel["address"]["streetAddress"]}\n'
    except KeyError:
        line += '—Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω\n'

    try:
        lon: float = hotel["coordinate"]["lon"]
        lat: float = hotel["coordinate"]["lat"]
        url_hotel_on_map: str = f'https://yandex.ru/maps/?ll={lon}%2C{lat}&mode=search' \
                                f'&sll={lon}%2C{lat}&text={lat}%2C{lon}&z=11'
        line += f'<a href="{url_hotel_on_map}">\nüåç  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ</a>\n\n' \
                f'<b>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –∏ –≥–ª–∞–≤–Ω–æ–π –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</b>\n'
    except KeyError:
        line += f'\n\n<b>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –∏ –≥–ª–∞–≤–Ω–æ–π –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</b>\n'

    try:
        for label in hotel['landmarks']:
            line += f'{label["label"]} - <b>{round((float(label["distance"].split()[0]) * 1.60934), 2)}</b> –∫–º\n'
    except KeyError:
        line += f'–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\n\n'

    try:
        price_USD = hotel["ratePlan"]["price"]["exactCurrent"]
        rate = usd_rate.func_rate(user_data=user_data)

        if price_USD and rate.rate_USD:
            price_RUB = int(rate.rate_USD * price_USD)
            line += f'<b>\n–°—Ç–æ–∏–º–æ—Å—Ç–∏</b><i> –ø–æ –∫—É—Ä—Å—É –¶–ë –†–§ –Ω–∞ {rate.date_rate}</i>' \
                    f'\n- –≤ —Å—É—Ç–∫–∏:   <b>{price_RUB} </b>—Ä—É–±.\n'

            with bot.retrieve_data(user_id=user_data.from_user.id) as data:
                num_days = data['num_days']
            if num_days > 1:
                line += f'- –∑–∞ <b>{num_days}</b> —Å—É—Ç–æ–∫:   <b>{price_RUB * num_days} </b>—Ä—É–±.\n'

    except KeyError:
        line += '–°—Ç–æ–∏–º–æ—Å—Ç—å:   <b>–ø–æ –∑–∞–ø—Ä–æ—Å—É</b>\n'

    logger.debug(f'-> OK -> return -> line hotel info')
    return line
